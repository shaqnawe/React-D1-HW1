{"ast":null,"code":"var _jsxFileName = \"/Users/shaktishah/Desktop/Coding Temple/2022/week_07/01/hw1/src/views/Sent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport moment from 'moment';\nimport { useData } from \"../contexts/DataProvider\";\nimport { useAuth } from \"../contexts/AuthProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Sent = () => {\n  _s();\n\n  const {\n    sent,\n    userEmail\n  } = useData();\n  const {\n    currentUser\n  } = useAuth();\n  const messageRef = useRef();\n  const userRef = useRef();\n  const [filteredSent, setFilteredSent] = useState([]); // Create function to handle form submission\n\n  const submitHandler = e => {\n    e.preventDefault();\n    const filteredSentList = []; // Loop through sent messages list\n\n    for (const s of sent) {\n      if (s.body.includes(userEmail)) {\n        filteredSentList.push(s);\n      }\n    }\n\n    setFilteredSent(filteredSentList);\n    messageRef.current.value = '';\n    userRef.current.value = '';\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container about\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center\",\n      children: \"Sent\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"container form col-6\",\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list-group-item\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              placeholder: \"Message To\",\n              ref: userRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list-group-item mt-1\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              placeholder: \"Message\",\n              ref: messageRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn float-right\",\n          id: \"send-btn\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sent\",\n        children: currentUser.loggedIn && filteredSent.length < 1 ? sent.map(s => {\n          var _s$TimeSent, _s$user;\n\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list-group-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [s === null || s === void 0 ? void 0 : s.body, /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"float-right\",\n                children: /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: moment((_s$TimeSent = s.TimeSent) === null || _s$TimeSent === void 0 ? void 0 : _s$TimeSent.toDate()).fromNow()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"cite\", {\n                children: [\" \\u2014 \", `${(_s$user = s.user) === null || _s$user === void 0 ? void 0 : _s$user.name}`, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 19\n            }, this)]\n          }, s.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this);\n        }) : filteredSent.map(s => {\n          var _m, _s$timeSent, _s$user2;\n\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list-group-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [(_m = m) === null || _m === void 0 ? void 0 : _m.body, /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"float-right\",\n                children: /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: moment((_s$timeSent = s.timeSent) === null || _s$timeSent === void 0 ? void 0 : _s$timeSent.toDate()).fromNow()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"cite\", {\n                children: [\" \\u2014 \", `${(_s$user2 = s.user) === null || _s$user2 === void 0 ? void 0 : _s$user2.name}`, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 19\n            }, this)]\n          }, s.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Sent, \"J2T22/j0E7Ky4URymzXw4al0z6M=\", false, function () {\n  return [useData, useAuth];\n});\n\n_c = Sent;\nexport default Sent;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sent\");","map":{"version":3,"sources":["/Users/shaktishah/Desktop/Coding Temple/2022/week_07/01/hw1/src/views/Sent.js"],"names":["React","useRef","useState","moment","useData","useAuth","Sent","sent","userEmail","currentUser","messageRef","userRef","filteredSent","setFilteredSent","submitHandler","e","preventDefault","filteredSentList","s","body","includes","push","current","value","loggedIn","length","map","TimeSent","toDate","fromNow","user","name","id","m","timeSent"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport moment from 'moment';\nimport { useData } from \"../contexts/DataProvider\";\nimport { useAuth } from \"../contexts/AuthProvider\";\n\nconst Sent = () => {\n  const { sent, userEmail } = useData();\n  const { currentUser } = useAuth();\n  const messageRef = useRef();\n  const userRef = useRef();\n  const [filteredSent, setFilteredSent] = useState([]);\n\n  // Create function to handle form submission\n  const submitHandler = ( e ) => {\n    e.preventDefault();\n    const filteredSentList = [];\n\n    // Loop through sent messages list\n    for(const s of sent){\n      if (s.body.includes(userEmail)) {\n        filteredSentList.push(s);\n      }\n    }\n    setFilteredSent(filteredSentList)\n    messageRef.current.value = '';\n    userRef.current.value = '';\n  };\n  return (\n    <div className=\"container about\">\n      <h1 className=\"text-center\">Sent</h1>\n      <div>\n        <form className=\"container form col-6\" onSubmit={submitHandler}>\n          <ul>\n            <li className=\"list-group-item\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Message To\"\n                ref={userRef}\n              />\n            </li>\n            <li className=\"list-group-item mt-1\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Message\"\n                ref={messageRef}\n              />\n            </li>\n          </ul>\n          <button type=\"submit\" className=\"btn float-right\" id=\"send-btn\">\n            Send\n          </button>\n        </form>\n        <div className=\"sent\">\n          {currentUser.loggedIn && filteredSent.length < 1\n            ? sent.map((s) => (\n                <li key={s.id} className=\"list-group-item\">\n                  <div>\n                    {s?.body}\n                    <span className=\"float-right\">\n                      <small>{moment(s.TimeSent?.toDate()).fromNow()}</small>\n                    </span>\n                  </div>\n                  <div>\n                    <cite> &mdash; {`${s.user?.name}`} </cite>\n                  </div>\n                </li>\n              ))\n            : filteredSent.map((s) => (\n                <li key={s.id} className=\"list-group-item\">\n                  <div>\n                    {m?.body}\n                    <span className=\"float-right\">\n                      <small>{moment(s.timeSent?.toDate()).fromNow()}</small>\n                    </span>\n                  </div>\n                  <div>\n                    <cite> &mdash; {`${s.user?.name}`} </cite>\n                  </div>\n                </li>\n              ))}\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Sent;"]},"metadata":{},"sourceType":"module"}