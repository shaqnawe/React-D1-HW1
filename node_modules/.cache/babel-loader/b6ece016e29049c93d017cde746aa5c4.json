{"ast":null,"code":"var _jsxFileName = \"/Users/shaktishah/Desktop/Coding Temple/2022/week_07/01/hw1/src/views/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport { useAuth } from \"../contexts/AuthProvider\";\nimport { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword, updateCurrentUser } from \"firebase/auth\";\nimport { getFirestore, setDoc, doc } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const {\n    currentUser\n  } = useAuth;\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [enteredPassword, setEnteredPassword] = useState('');\n\n  const emailChangeHandler = event => {\n    setEnteredEmail(event.target.value);\n  };\n\n  const passwordChangeHandler = event => {\n    setEnteredPassword(event.target.value);\n  };\n\n  const loginSubmitHandler = event => {\n    event.preventDefault();\n  };\n\n  const auth = getAuth();\n  createUserWithEmailAndPassword(auth, enteredEmail, enteredPassword).then(userCredential => {\n    // Signed in\n    const user = userCredential.user;\n    console.log(\"Account created!\"); // ...\n  }).catch(error => {\n    const errorCode = error.code;\n    const errorMessage = error.message;\n    console.log(errorCode, errorMessage);\n  });\n  signInWithEmailAndPassword(auth, enteredEmail, enteredPassword).then(userCredential => {\n    // Signed in\n    const user = userCredential.user; // ...\n  }).catch(error => {\n    const errorCode = error.code;\n    const errorMessage = error.message;\n  });\n  useEffect(() => {\n    onAuthStateChanged(auth, user => {\n      if (user) {\n        // once the user logs in, we need to add them to the database as a reference\n        // query the users collection to find the user\n        const useRef = doc(db, \"users\", user.uid); // if that user doesn't exist, add them to the database\n        // otherwise, if the user does exist, overwrite (don't duplicate) their information\n\n        setDoc(useRef, {\n          email: user.email,\n          name: user.displayName\n        }, {\n          merge: true\n        });\n        setCurrentUser({\n          id: user.uid,\n          name: user.displayName,\n          image: user.photoURL,\n          email: user.email,\n          loggedIn: true\n        });\n      }\n    });\n  }, [auth, db]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          id: \"login-form\",\n          onSubmit: loginSubmitHandler,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group row\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"staticEmail\",\n              className: \"col-sm-2 col-form-label\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-sm-10\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                className: \"form-control\",\n                name: \"userEmail\",\n                placeholder: \"email@example.com\",\n                onChange: emailChangeHandler\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group row\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"inputPassword\",\n              className: \"col-sm-2 col-form-label\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-sm-10\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                className: \"form-control\",\n                name: \"userPassword\",\n                onChange: passwordChangeHandler\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"login-submit\",\n            type: \"submit\",\n            className: \"btn float-right btn-muted\",\n            onSubmit: createUserWithEmailAndPassword,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"79XhO4typJCnJBMWGJXi5qmjjSM=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/shaktishah/Desktop/Coding Temple/2022/week_07/01/hw1/src/views/Login.js"],"names":["React","Fragment","useState","useEffect","useAuth","getAuth","createUserWithEmailAndPassword","signInWithEmailAndPassword","updateCurrentUser","getFirestore","setDoc","doc","Login","currentUser","enteredEmail","setEnteredEmail","enteredPassword","setEnteredPassword","emailChangeHandler","event","target","value","passwordChangeHandler","loginSubmitHandler","preventDefault","auth","then","userCredential","user","console","log","catch","error","errorCode","code","errorMessage","message","onAuthStateChanged","useRef","db","uid","email","name","displayName","merge","setCurrentUser","id","image","photoURL","loggedIn"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\nimport { useAuth } from \"../contexts/AuthProvider\";\nimport {\n  getAuth,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  updateCurrentUser,\n} from \"firebase/auth\";\nimport { getFirestore, setDoc, doc } from \"firebase/firestore\";\n\nconst Login = () => {\n\n  const { currentUser } = useAuth;\n  const[enteredEmail, setEnteredEmail] = useState('');\n  const[enteredPassword, setEnteredPassword] = useState('');\n  const emailChangeHandler = (event) => {\n    setEnteredEmail(event.target.value);\n  };\n  const passwordChangeHandler = event => {\n    setEnteredPassword(event.target.value);\n  };\n  const loginSubmitHandler = (event) => {\n    event.preventDefault();\n  };\n\n  const auth = getAuth();\n  createUserWithEmailAndPassword(auth, enteredEmail, enteredPassword)\n    .then((userCredential) => {\n      // Signed in\n      const user = userCredential.user;\n      console.log(\"Account created!\")\n      // ...\n    })\n    .catch((error) => {\n      const errorCode = error.code;\n      const errorMessage = error.message;\n      console.log(errorCode, errorMessage);\n    });\n    signInWithEmailAndPassword(auth, enteredEmail, enteredPassword)\n      .then((userCredential) => {\n        // Signed in\n        const user = userCredential.user;\n        // ...\n      })\n      .catch((error) => {\n        const errorCode = error.code;\n        const errorMessage = error.message;\n      });\n      useEffect(() => {\n        onAuthStateChanged(auth, (user) => {\n          if (user) {\n            // once the user logs in, we need to add them to the database as a reference\n            // query the users collection to find the user\n            const useRef = doc(db, \"users\", user.uid);\n            // if that user doesn't exist, add them to the database\n            // otherwise, if the user does exist, overwrite (don't duplicate) their information\n            setDoc(\n              useRef,\n              { email: user.email, name: user.displayName },\n              { merge: true }\n            );\n            setCurrentUser({\n              id: user.uid,\n              name: user.displayName,\n              image: user.photoURL,\n              email: user.email,\n              loggedIn: true,\n            });\n          }\n        });\n      }, [auth, db]);\n\n  return (\n    <Fragment>\n      <div className=\"container\">\n        <div>\n          <form id=\"login-form\" onSubmit={loginSubmitHandler}>\n            <div className=\"form-group row\">\n              <label for=\"staticEmail\" className=\"col-sm-2 col-form-label\">\n                Email\n              </label>\n              <div className=\"col-sm-10\">\n                <input\n                  type=\"email\"\n                  className=\"form-control\"\n                  name=\"userEmail\"\n                  placeholder=\"email@example.com\"\n                  onChange={emailChangeHandler}\n                />\n              </div>\n            </div>\n            <div className=\"form-group row\">\n              <label for=\"inputPassword\" className=\"col-sm-2 col-form-label\">\n                Password\n              </label>\n              <div className=\"col-sm-10\">\n                <input\n                  type=\"password\"\n                  className=\"form-control\"\n                  name=\"userPassword\"\n                  onChange={passwordChangeHandler}\n                />\n              </div>\n            </div>\n\n            <button\n              id=\"login-submit\"\n              type=\"submit\"\n              className=\"btn float-right btn-muted\"\n              onSubmit={createUserWithEmailAndPassword}\n            >\n              Submit\n            </button>\n          </form>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}