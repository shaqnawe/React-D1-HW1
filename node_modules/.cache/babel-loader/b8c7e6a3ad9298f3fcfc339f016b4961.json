{"ast":null,"code":"var _jsxFileName = \"/Users/shaktishah/Desktop/Coding Temple/2022/week_07/01/hw1/src/components/Auth/AuthForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef } from \"react\";\nimport classes from \"./AuthForm.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthForm = () => {\n  _s();\n\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin(prevState => !prevState);\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    const enteredEmail = emailRef.current.value;\n    const enteredPassword = passwordRef.current.value;\n    setIsLoading(true); // check if the user is in login or sign-up mode\n\n    let url;\n\n    if (isLogin) {\n      url = \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBH9bHJV-K8H76q5nmHc7rVI9KvzNJ9FJc\";\n      fetch(\"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBH9bHJV-K8H76q5nmHc7rVI9KvzNJ9FJc\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          email: enteredEmail,\n          password: enteredPassword,\n          returnSecureToken: true\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n    } else {\n      url = fetch(\"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBH9bHJV-K8H76q5nmHc7rVI9KvzNJ9FJc\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          email: enteredEmail,\n          password: enteredPassword,\n          returnSecureToken: true\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(res => {\n        setIsLoading(false);\n\n        if (res.ok) {\n          console.log(\"Account created!\");\n        } else {\n          return res.json().then(data => {\n            let errorMessage = 'Authentication Failed!';\n\n            if (data && data.error && data.error.message) {\n              errorMessage = data.error.message;\n            }\n\n            console.log(errorMessage);\n            alert(errorMessage);\n          });\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? \"Login\" : \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          required: true,\n          ref: emailRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          required: true,\n          ref: passwordRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [!isLoading && /*#__PURE__*/_jsxDEV(\"button\", {\n          children: isLogin ? \"Login\" : \"Create Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 26\n        }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: classes.toggle,\n          onClick: switchAuthModeHandler,\n          children: isLogin ? \"Create new account\" : \"Login with existing account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthForm, \"QjHRw8GoVCJEC828II9yzgXh3P4=\");\n\n_c = AuthForm;\nexport default AuthForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"sources":["/Users/shaktishah/Desktop/Coding Temple/2022/week_07/01/hw1/src/components/Auth/AuthForm.js"],"names":["useState","useRef","classes","AuthForm","emailRef","passwordRef","isLogin","setIsLogin","isLoading","setIsLoading","switchAuthModeHandler","prevState","submitHandler","e","preventDefault","enteredEmail","current","value","enteredPassword","url","fetch","method","body","JSON","stringify","email","password","returnSecureToken","headers","then","res","ok","console","log","json","data","errorMessage","error","message","alert","auth","control","actions","toggle"],"mappings":"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","sourcesContent":["import { useState, useRef } from \"react\";\nimport classes from \"./AuthForm.module.css\";\n\nconst AuthForm = () => {\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    const enteredEmail = emailRef.current.value;\n    const enteredPassword = passwordRef.current.value;\n    setIsLoading(true);\n    // check if the user is in login or sign-up mode\n    let url;\n    if(isLogin){\n        url =\n          \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBH9bHJV-K8H76q5nmHc7rVI9KvzNJ9FJc\";\n        fetch(\n          \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBH9bHJV-K8H76q5nmHc7rVI9KvzNJ9FJc\",\n          {\n            method: \"POST\",\n            body: JSON.stringify({\n              email: enteredEmail,\n              password: enteredPassword,\n              returnSecureToken: true,\n            }),\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n          }\n        );\n    } else {\n        url = \n        fetch\n          (\n            \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBH9bHJV-K8H76q5nmHc7rVI9KvzNJ9FJc\",\n            {\n              method: \"POST\",\n              body: JSON.stringify({\n                email: enteredEmail,\n                password: enteredPassword,\n                returnSecureToken: true,\n              }),\n              headers: {\n                \"Content-Type\": \"application/json\",\n              },\n            }\n          )\n          .then((res) => {\n              setIsLoading(false)\n            if (res.ok) {\n              console.log(\"Account created!\");\n            } else {\n              return res.json().then((data) => {\n                  let errorMessage = 'Authentication Failed!';\n                  if(data && data.error && data.error.message) {\n                    errorMessage = data.error.message;\n                  }\n                  console.log(errorMessage);\n                  alert(errorMessage);\n              });\n            }\n          });\n    }\n  };\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? \"Login\" : \"Sign Up\"}</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor=\"email\">Your Email</label>\n          <input type=\"email\" id=\"email\" required ref={emailRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"password\">Your Password</label>\n          <input type=\"password\" id=\"password\" required ref={passwordRef} />\n        </div>\n        <div className={classes.actions}>\n          {!isLoading && <button>{isLogin ? \"Login\" : \"Create Account\"}</button>}\n          {isLoading && <p>Loading...</p>}\n          <button\n            type=\"button\"\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? \"Create new account\" : \"Login with existing account\"}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n"]},"metadata":{},"sourceType":"module"}