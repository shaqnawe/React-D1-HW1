{"ast":null,"code":"var _jsxFileName = \"/Users/shaktishah/Desktop/Coding Temple/2022/week_07/01/hw1/src/contexts/DataProvider.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useContext, useEffect, useState, useCallback, useRef } from 'react';\nimport axios from 'axios';\nimport { firebaseApp } from '../firebase/config';\nimport { collectionGroup, getDoc, getDocs, query, getFirestore } from 'firebase/firestore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DataContext = /*#__PURE__*/createContext(); // To make your own React hook\n\nexport function useData() {\n  _s();\n\n  return useContext(DataContext);\n}\n\n_s(useData, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nconst DataProvider = props => {\n  _s2();\n\n  const [posts, setPosts] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const db = getFirestore();\n  const getMessages = useCallback(async () => {\n    // const q = query( collection ( db, 'messages') ), orderBy( 'dateCreated', 'desc' ) );\n    console.log(db);\n    const q = query(collectionGroup(db, 'messages'));\n    let newMessages = [];\n    const querySnapshot = await getDocs(q);\n    querySnapshot.forEach(async doc => {\n      const userRef = await getDoc(doc.ref.parent.parent);\n      console.log(userRef);\n      newMessages.push({\n        id: doc.id,\n        ...doc.data(),\n        user: { ...useRef.data()\n        }\n      });\n      setMessages(newMessages);\n      console.log(doc.data());\n      return querySnapshot;\n    });\n  }, [db]);\n  useEffect(() => {\n    axios.get(`https://fakebook-january-derek.herokuapp.com/api/v1/blog`).then(res => setPosts(res.data));\n    getMessages();\n  }, [getMessages]);\n  useEffect(() => {\n    console.log(firebaseApp);\n  }, []);\n  const values = {\n    posts: posts,\n    messages: messages\n  };\n  return /*#__PURE__*/_jsxDEV(DataContext.Provider, {\n    value: values,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(DataProvider, \"CZATzsz5IvsdRu7hIeYq4sSigiI=\");\n\n_c = DataProvider;\nexport default DataProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataProvider\");","map":{"version":3,"sources":["/Users/shaktishah/Desktop/Coding Temple/2022/week_07/01/hw1/src/contexts/DataProvider.js"],"names":["React","createContext","useContext","useEffect","useState","useCallback","useRef","axios","firebaseApp","collectionGroup","getDoc","getDocs","query","getFirestore","DataContext","useData","DataProvider","props","posts","setPosts","messages","setMessages","db","getMessages","console","log","q","newMessages","querySnapshot","forEach","doc","userRef","ref","parent","push","id","data","user","get","then","res","values","children"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,SAA3C,EAAsDC,QAAtD,EAAgEC,WAAhE,EAA6EC,MAA7E,QAA2F,OAA3F;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,SAASC,eAAT,EAA0BC,MAA1B,EAAkCC,OAAlC,EAA2CC,KAA3C,EAAkDC,YAAlD,QAAsE,oBAAtE;;AAEA,OAAO,MAAMC,WAAW,gBAAGb,aAAa,EAAjC,C,CAEP;;AACA,OAAO,SAASc,OAAT,GAAmB;AAAA;;AACtB,SAAOb,UAAU,CAAEY,WAAF,CAAjB;AACH;;GAFeC,O;;AAIhB,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAE5B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACgB,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAMkB,EAAE,GAAGT,YAAY,EAAvB;AAEA,QAAMU,WAAW,GAAGlB,WAAW,CAC3B,YAAY;AACR;AACAmB,IAAAA,OAAO,CAACC,GAAR,CAAYH,EAAZ;AAEA,UAAMI,CAAC,GAAGd,KAAK,CAAEH,eAAe,CAAEa,EAAF,EAAM,UAAN,CAAjB,CAAf;AAEA,QAAIK,WAAW,GAAG,EAAlB;AAEA,UAAMC,aAAa,GAAG,MAAMjB,OAAO,CAAEe,CAAF,CAAnC;AAEAE,IAAAA,aAAa,CAACC,OAAd,CAAuB,MAAMC,GAAN,IAAa;AAChC,YAAMC,OAAO,GAAG,MAAMrB,MAAM,CAACoB,GAAG,CAACE,GAAJ,CAAQC,MAAR,CAAeA,MAAhB,CAA5B;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAYM,OAAZ;AAEAJ,MAAAA,WAAW,CAACO,IAAZ,CAAiB;AACbC,QAAAA,EAAE,EAAEL,GAAG,CAACK,EADK;AAEb,WAAGL,GAAG,CAACM,IAAJ,EAFU;AAGbC,QAAAA,IAAI,EAAE,EAAE,GAAG/B,MAAM,CAAC8B,IAAP;AAAL;AAHO,OAAjB;AAKAf,MAAAA,WAAW,CAAEM,WAAF,CAAX;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAYK,GAAG,CAACM,IAAJ,EAAZ;AACA,aAAOR,aAAP;AACH,KAZD;AAaH,GAxB0B,EAyB3B,CAACN,EAAD,CAzB2B,CAA/B;AA4BAnB,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,KAAK,CACF+B,GADH,CACQ,0DADR,EAEGC,IAFH,CAESC,GAAD,IAASrB,QAAQ,CAACqB,GAAG,CAACJ,IAAL,CAFzB;AAGEb,IAAAA,WAAW;AACd,GALQ,EAKN,CAAEA,WAAF,CALM,CAAT;AAMApB,EAAAA,SAAS,CAAC,MAAM;AACdqB,IAAAA,OAAO,CAACC,GAAR,CAAYjB,WAAZ;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,QAAMiC,MAAM,GAAG;AACbvB,IAAAA,KAAK,EAAEA,KADM;AAEbE,IAAAA,QAAQ,EAAEA;AAFG,GAAf;AAKA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAKqB,MAAhC;AAAA,cACKxB,KAAK,CAACyB;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAvDD;;IAAM1B,Y;;KAAAA,Y;AAyDN,eAAeA,YAAf","sourcesContent":["import React, { createContext, useContext, useEffect, useState, useCallback, useRef } from 'react';\nimport axios from 'axios';\nimport { firebaseApp } from '../firebase/config';\nimport { collectionGroup, getDoc, getDocs, query, getFirestore } from 'firebase/firestore';\n\nexport const DataContext = createContext()\n\n// To make your own React hook\nexport function useData() {\n    return useContext( DataContext )\n}\n\nconst DataProvider = (props) => {\n    \n    const [posts, setPosts] = useState([]);\n    const [messages, setMessages] = useState([]);\n\n    const db = getFirestore()\n\n    const getMessages = useCallback(\n        async () => {\n            // const q = query( collection ( db, 'messages') ), orderBy( 'dateCreated', 'desc' ) );\n            console.log(db)\n\n            const q = query( collectionGroup (db, 'messages') )\n\n            let newMessages = [];\n\n            const querySnapshot = await getDocs( q )\n\n            querySnapshot.forEach( async doc => {\n                const userRef = await getDoc(doc.ref.parent.parent);\n                console.log(userRef);\n\n                newMessages.push({\n                    id: doc.id,\n                    ...doc.data(),\n                    user: { ...useRef.data() }\n                })\n                setMessages( newMessages )\n                console.log(doc.data())\n                return querySnapshot;\n            })\n        },\n        [db]\n    )\n    \n    useEffect(() => {\n      axios\n        .get(`https://fakebook-january-derek.herokuapp.com/api/v1/blog`)\n        .then((res) => setPosts(res.data));\n        getMessages()\n    }, [ getMessages ]);\n    useEffect(() => {\n      console.log(firebaseApp)\n    }, [])\n    \n    const values = {\n      posts: posts,\n      messages: messages\n    };\n\n    return (\n        <DataContext.Provider value = { values }>\n            {props.children}\n        </DataContext.Provider>\n    )\n}\n\nexport default DataProvider;"]},"metadata":{},"sourceType":"module"}