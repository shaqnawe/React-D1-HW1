{"ast":null,"code":"var _jsxFileName = \"/Users/shaktishah/Desktop/Coding Temple/2022/week_07/01/hw1/src/views/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport { useAuth } from \"../contexts/AuthProvider\";\nimport { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword, updateCurrentUser, onAuthStateChanged } from \"firebase/auth\";\nimport { getFirestore, setDoc, doc } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  // nameChangeHandler\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [enteredPassword, setEnteredPassword] = useState(\"\");\n  const db = getFirestore();\n  const [currentUser, setCurrentUser] = useState({\n    loggedIn: false\n  });\n\n  const nameChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const emailChangeHandler = event => {\n    setEnteredEmail(event.target.value);\n  };\n\n  const passwordChangeHandler = event => {\n    setEnteredPassword(event.target.value);\n  };\n\n  const loginSubmitHandler = event => {\n    event.preventDefault();\n  };\n\n  const auth = getAuth();\n  createUserWithEmailAndPassword(auth, enteredEmail, enteredPassword).then(userCredential => {\n    // Signed in\n    const user = userCredential.user;\n    console.log(\"Account created!\"); // ...\n  }).catch(error => {\n    const errorCode = error.code;\n    const errorMessage = error.message;\n    console.log(errorCode, errorMessage);\n  });\n  signInWithEmailAndPassword(auth, enteredEmail, enteredPassword).then(userCredential => {\n    // Signed in\n    const user = userCredential.user; // ...\n  }).catch(error => {\n    const errorCode = error.code;\n    const errorMessage = error.message;\n  });\n  useEffect(() => {\n    onAuthStateChanged(auth, user => {\n      if (user) {\n        // once the user logs in, we need to add them to the database as a reference\n        // query the users collection to find the user\n        const useRef = doc(db, \"users\", user.uid); // if that user doesn't exist, add them to the database\n        // otherwise, if the user does exist, overwrite (don't duplicate) their information\n\n        setDoc(useRef, {\n          email: user.email,\n          name: enteredName\n        }, {\n          merge: true\n        });\n        setCurrentUser({\n          id: user.uid,\n          name: enteredName,\n          image: user.photoURL,\n          email: user.email,\n          loggedIn: true\n        });\n      }\n    });\n  }, [auth, db]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          id: \"login-form\",\n          onSubmit: loginSubmitHandler,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group row\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"inputPassword\",\n              className: \"col-sm-2 col-form-label\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-4\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                name: \"username\",\n                onChange: nameChangeHandler\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group row\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"staticEmail\",\n              className: \"col-sm-2 col-form-label\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-4\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                className: \"form-control\",\n                name: \"userEmail\",\n                placeholder: \"email@example.com\",\n                onChange: emailChangeHandler\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group row\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"inputPassword\",\n              className: \"col-sm-2 col-form-label\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-4\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                className: \"form-control\",\n                name: \"userPassword\",\n                onChange: passwordChangeHandler\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"login-submit\",\n            type: \"submit\",\n            className: \"btn text-center\",\n            onSubmit: createUserWithEmailAndPassword,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"15A67OfH6dWmXIDiwL2km6fNaf8=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/shaktishah/Desktop/Coding Temple/2022/week_07/01/hw1/src/views/Login.js"],"names":["React","Fragment","useState","useEffect","useAuth","getAuth","createUserWithEmailAndPassword","signInWithEmailAndPassword","updateCurrentUser","onAuthStateChanged","getFirestore","setDoc","doc","Login","enteredName","setEnteredName","enteredEmail","setEnteredEmail","enteredPassword","setEnteredPassword","db","currentUser","setCurrentUser","loggedIn","nameChangeHandler","event","target","value","emailChangeHandler","passwordChangeHandler","loginSubmitHandler","preventDefault","auth","then","userCredential","user","console","log","catch","error","errorCode","code","errorMessage","message","useRef","uid","email","name","merge","id","image","photoURL"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\nimport { useAuth } from \"../contexts/AuthProvider\";\nimport {\n  getAuth,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  updateCurrentUser,\n  onAuthStateChanged,\n} from \"firebase/auth\";\nimport { getFirestore, setDoc, doc } from \"firebase/firestore\";\n\nconst Login = () => {\n  // nameChangeHandler\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [enteredPassword, setEnteredPassword] = useState(\"\");\n  const db = getFirestore();\n  const [currentUser, setCurrentUser] = useState({ loggedIn: false });\n  \n  const nameChangeHandler = (event) => {\n    setEnteredName(event.target.value);\n  };\n  const emailChangeHandler = (event) => {\n    setEnteredEmail(event.target.value);\n  };\n  const passwordChangeHandler = (event) => {\n    setEnteredPassword(event.target.value);\n  };\n  const loginSubmitHandler = (event) => {\n    event.preventDefault();\n  };\n\n  const auth = getAuth();\n  createUserWithEmailAndPassword(auth, enteredEmail, enteredPassword)\n    .then((userCredential) => {\n      // Signed in\n      const user = userCredential.user;\n      console.log(\"Account created!\");\n      // ...\n    })\n    .catch((error) => {\n      const errorCode = error.code;\n      const errorMessage = error.message;\n      console.log(errorCode, errorMessage);\n    });\n  signInWithEmailAndPassword(auth, enteredEmail, enteredPassword)\n    .then((userCredential) => {\n      // Signed in\n      const user = userCredential.user;\n      // ...\n    })\n    .catch((error) => {\n      const errorCode = error.code;\n      const errorMessage = error.message;\n    });\n  useEffect(() => {\n    onAuthStateChanged(auth, (user) => {\n      if (user) {\n        // once the user logs in, we need to add them to the database as a reference\n        // query the users collection to find the user\n        const useRef = doc(db, \"users\", user.uid);\n        // if that user doesn't exist, add them to the database\n        // otherwise, if the user does exist, overwrite (don't duplicate) their information\n        setDoc(\n          useRef,\n          { email: user.email, name: enteredName },\n          { merge: true }\n        );\n        setCurrentUser({\n          id: user.uid,\n          name: enteredName,\n          image: user.photoURL,\n          email: user.email,\n          loggedIn: true,\n        });\n      }\n    });\n  }, [auth, db]);\n\n  return (\n    <Fragment>\n      <div className=\"container\">\n        <div>\n          <form id=\"login-form\" onSubmit={loginSubmitHandler}>\n            <div className=\"form-group row\">\n              <label for=\"inputPassword\" className=\"col-sm-2 col-form-label\">\n                Name\n              </label>\n              <div className=\"col-4\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"username\"\n                  onChange={nameChangeHandler}\n                />\n              </div>\n            </div>\n            <div className=\"form-group row\">\n              <label for=\"staticEmail\" className=\"col-sm-2 col-form-label\">\n                Email\n              </label>\n              <div className=\"col-4\">\n                <input\n                  type=\"email\"\n                  className=\"form-control\"\n                  name=\"userEmail\"\n                  placeholder=\"email@example.com\"\n                  onChange={emailChangeHandler}\n                />\n              </div>\n            </div>\n            <div className=\"form-group row\">\n              <label for=\"inputPassword\" className=\"col-sm-2 col-form-label\">\n                Password\n              </label>\n              <div className=\"col-4\">\n                <input\n                  type=\"password\"\n                  className=\"form-control\"\n                  name=\"userPassword\"\n                  onChange={passwordChangeHandler}\n                />\n              </div>\n            </div>\n\n            <button\n              id=\"login-submit\"\n              type=\"submit\"\n              className=\"btn text-center\"\n              onSubmit={createUserWithEmailAndPassword}\n            >\n              Submit\n            </button>\n          </form>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}