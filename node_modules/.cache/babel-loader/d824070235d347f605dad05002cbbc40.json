{"ast":null,"code":"var _jsxFileName = \"/Users/shaktishah/Desktop/Coding Temple/2022/week_07/01/hw1/src/views/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect, useRef } from \"react\";\nimport { useAuth } from \"../contexts/AuthProvider\";\nimport { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword, updateCurrentUser, onAuthStateChanged } from \"firebase/auth\";\nimport { getFirestore, setDoc, doc } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const nameRef = useRef();\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const passwordConfirmRef = useRef();\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [enteredPassword, setEnteredPassword] = useState(\"\");\n  const db = getFirestore();\n  const [currentUser, setCurrentUser] = useState({\n    loggedIn: false\n  });\n\n  const nameChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const emailChangeHandler = event => {\n    setEnteredEmail(event.target.value);\n  };\n\n  const passwordChangeHandler = event => {\n    setEnteredPassword(event.target.value);\n  };\n\n  const loginSubmitHandler = event => {\n    event.preventDefault();\n    setEnteredName('');\n    setEnteredEmail('');\n    setEnteredPassword('');\n  };\n\n  const auth = getAuth();\n  createUserWithEmailAndPassword(auth, enteredEmail, enteredPassword).then(userCredential => {\n    // Signed in\n    const user = userCredential.user;\n    console.log(\"Account created!\"); // ...\n  }).catch(error => {\n    const errorCode = error.code;\n    const errorMessage = error.message;\n    console.log(errorCode, errorMessage);\n  });\n  signInWithEmailAndPassword(auth, enteredEmail, enteredPassword).then(userCredential => {\n    // Signed in\n    const user = userCredential.user; // ...\n  }).catch(error => {\n    const errorCode = error.code;\n    const errorMessage = error.message;\n  });\n  onAuthStateChanged(auth, user => {\n    if (user) {\n      // once the user logs in, we need to add them to the database as a reference\n      // query the users collection to find the user\n      const useRef = doc(db, \"users\", user.uid); // if that user doesn't exist, add them to the database\n      // otherwise, if the user does exist, overwrite (don't duplicate) their information\n\n      setDoc(useRef, {\n        email: user.email,\n        name: user.displayName\n      }, {\n        merge: true\n      });\n      setCurrentUser({\n        id: user.uid,\n        name: user.displayName,\n        image: user.photoURL,\n        email: user.email,\n        loggedIn: true\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"card\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        class: \"card-title\",\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        class: \"card-text\",\n        children: \"Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"6vShx3G7Mu5yy0RWseot2OVDDTA=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/shaktishah/Desktop/Coding Temple/2022/week_07/01/hw1/src/views/Login.js"],"names":["React","Fragment","useState","useEffect","useRef","useAuth","getAuth","createUserWithEmailAndPassword","signInWithEmailAndPassword","updateCurrentUser","onAuthStateChanged","getFirestore","setDoc","doc","Login","nameRef","emailRef","passwordRef","passwordConfirmRef","enteredName","setEnteredName","enteredEmail","setEnteredEmail","enteredPassword","setEnteredPassword","db","currentUser","setCurrentUser","loggedIn","nameChangeHandler","event","target","value","emailChangeHandler","passwordChangeHandler","loginSubmitHandler","preventDefault","auth","then","userCredential","user","console","log","catch","error","errorCode","code","errorMessage","message","uid","email","name","displayName","merge","id","image","photoURL"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,SAApC,EAA+CC,MAA/C,QAA6D,OAA7D;AACA,SAASC,OAAT,QAAwB,0BAAxB;AACA,SACEC,OADF,EAEEC,8BAFF,EAGEC,0BAHF,EAIEC,iBAJF,EAKEC,kBALF,QAMO,eANP;AAOA,SAASC,YAAT,EAAuBC,MAAvB,EAA+BC,GAA/B,QAA0C,oBAA1C;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAMC,OAAO,GAAGX,MAAM,EAAtB;AACA,QAAMY,QAAQ,GAAGZ,MAAM,EAAvB;AACA,QAAMa,WAAW,GAAGb,MAAM,EAA1B;AACA,QAAMc,kBAAkB,GAAGd,MAAM,EAAjC;AACA,QAAM,CAACe,WAAD,EAAcC,cAAd,IAAgClB,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACmB,YAAD,EAAeC,eAAf,IAAkCpB,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACqB,eAAD,EAAkBC,kBAAlB,IAAwCtB,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAMuB,EAAE,GAAGd,YAAY,EAAvB;AACA,QAAM,CAACe,WAAD,EAAcC,cAAd,IAAgCzB,QAAQ,CAAC;AAAE0B,IAAAA,QAAQ,EAAE;AAAZ,GAAD,CAA9C;;AAEA,QAAMC,iBAAiB,GAAIC,KAAD,IAAW;AACnCV,IAAAA,cAAc,CAACU,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AACD,GAFD;;AAGA,QAAMC,kBAAkB,GAAIH,KAAD,IAAW;AACpCR,IAAAA,eAAe,CAACQ,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AACD,GAFD;;AAGA,QAAME,qBAAqB,GAAIJ,KAAD,IAAW;AACvCN,IAAAA,kBAAkB,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAlB;AACD,GAFD;;AAGA,QAAMG,kBAAkB,GAAIL,KAAD,IAAW;AACpCA,IAAAA,KAAK,CAACM,cAAN;AACAhB,IAAAA,cAAc,CAAC,EAAD,CAAd;AACAE,IAAAA,eAAe,CAAC,EAAD,CAAf;AACAE,IAAAA,kBAAkB,CAAC,EAAD,CAAlB;AACD,GALD;;AAOA,QAAMa,IAAI,GAAG/B,OAAO,EAApB;AACAC,EAAAA,8BAA8B,CAAC8B,IAAD,EAAOhB,YAAP,EAAqBE,eAArB,CAA9B,CACGe,IADH,CACSC,cAAD,IAAoB;AACxB;AACA,UAAMC,IAAI,GAAGD,cAAc,CAACC,IAA5B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAHwB,CAIxB;AACD,GANH,EAOGC,KAPH,CAOUC,KAAD,IAAW;AAChB,UAAMC,SAAS,GAAGD,KAAK,CAACE,IAAxB;AACA,UAAMC,YAAY,GAAGH,KAAK,CAACI,OAA3B;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAYG,SAAZ,EAAuBE,YAAvB;AACD,GAXH;AAYAvC,EAAAA,0BAA0B,CAAC6B,IAAD,EAAOhB,YAAP,EAAqBE,eAArB,CAA1B,CACGe,IADH,CACSC,cAAD,IAAoB;AACxB;AACA,UAAMC,IAAI,GAAGD,cAAc,CAACC,IAA5B,CAFwB,CAGxB;AACD,GALH,EAMGG,KANH,CAMUC,KAAD,IAAW;AAChB,UAAMC,SAAS,GAAGD,KAAK,CAACE,IAAxB;AACA,UAAMC,YAAY,GAAGH,KAAK,CAACI,OAA3B;AACD,GATH;AAUEtC,EAAAA,kBAAkB,CAAC2B,IAAD,EAAQG,IAAD,IAAU;AACjC,QAAIA,IAAJ,EAAU;AACR;AACA;AACA,YAAMpC,MAAM,GAAGS,GAAG,CAACY,EAAD,EAAK,OAAL,EAAce,IAAI,CAACS,GAAnB,CAAlB,CAHQ,CAIR;AACA;;AACArC,MAAAA,MAAM,CACJR,MADI,EAEJ;AAAE8C,QAAAA,KAAK,EAAEV,IAAI,CAACU,KAAd;AAAqBC,QAAAA,IAAI,EAAEX,IAAI,CAACY;AAAhC,OAFI,EAGJ;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAHI,CAAN;AAKA1B,MAAAA,cAAc,CAAC;AACb2B,QAAAA,EAAE,EAAEd,IAAI,CAACS,GADI;AAEbE,QAAAA,IAAI,EAAEX,IAAI,CAACY,WAFE;AAGbG,QAAAA,KAAK,EAAEf,IAAI,CAACgB,QAHC;AAIbN,QAAAA,KAAK,EAAEV,IAAI,CAACU,KAJC;AAKbtB,QAAAA,QAAQ,EAAE;AALG,OAAD,CAAd;AAOD;AACF,GApBiB,CAAlB;AAsBF,sBACE;AAAK,IAAA,KAAK,EAAC,MAAX;AAAA,2BACE;AAAK,MAAA,KAAK,EAAC,WAAX;AAAA,8BAEE;AAAI,QAAA,KAAK,EAAC,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAG,QAAA,KAAK,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAjFD;;GAAMd,K;;KAAAA,K;AAmFN,eAAeA,KAAf","sourcesContent":["import React, { Fragment, useState, useEffect, useRef } from \"react\";\nimport { useAuth } from \"../contexts/AuthProvider\";\nimport {\n  getAuth,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  updateCurrentUser,\n  onAuthStateChanged,\n} from \"firebase/auth\";\nimport { getFirestore, setDoc, doc } from \"firebase/firestore\";\n\nconst Login = () => {\n  const nameRef = useRef();\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const passwordConfirmRef = useRef();\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [enteredPassword, setEnteredPassword] = useState(\"\");\n  const db = getFirestore();\n  const [currentUser, setCurrentUser] = useState({ loggedIn: false });\n  \n  const nameChangeHandler = (event) => {\n    setEnteredName(event.target.value);\n  };\n  const emailChangeHandler = (event) => {\n    setEnteredEmail(event.target.value);\n  };\n  const passwordChangeHandler = (event) => {\n    setEnteredPassword(event.target.value);\n  };\n  const loginSubmitHandler = (event) => {\n    event.preventDefault();\n    setEnteredName('');\n    setEnteredEmail('');\n    setEnteredPassword('');\n  };\n\n  const auth = getAuth();\n  createUserWithEmailAndPassword(auth, enteredEmail, enteredPassword)\n    .then((userCredential) => {\n      // Signed in\n      const user = userCredential.user;\n      console.log(\"Account created!\");\n      // ...\n    })\n    .catch((error) => {\n      const errorCode = error.code;\n      const errorMessage = error.message;\n      console.log(errorCode, errorMessage);\n    });\n  signInWithEmailAndPassword(auth, enteredEmail, enteredPassword)\n    .then((userCredential) => {\n      // Signed in\n      const user = userCredential.user;\n      // ...\n    })\n    .catch((error) => {\n      const errorCode = error.code;\n      const errorMessage = error.message;\n    });\n    onAuthStateChanged(auth, (user) => {\n      if (user) {\n        // once the user logs in, we need to add them to the database as a reference\n        // query the users collection to find the user\n        const useRef = doc(db, \"users\", user.uid);\n        // if that user doesn't exist, add them to the database\n        // otherwise, if the user does exist, overwrite (don't duplicate) their information\n        setDoc(\n          useRef,\n          { email: user.email, name: user.displayName },\n          { merge: true }\n        );\n        setCurrentUser({\n          id: user.uid,\n          name: user.displayName,\n          image: user.photoURL,\n          email: user.email,\n          loggedIn: true,\n        });\n      }\n    });\n\n  return (\n    <div class=\"card\">\n      <div class=\"card-body\">\n        \n        <h4 class=\"card-title\">Title</h4>\n        <p class=\"card-text\">Text</p>\n      </div>\n    </div>\n  )\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}